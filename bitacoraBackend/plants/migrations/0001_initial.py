# Generated by Django 5.2.7 on 2025-10-27 04:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image_url', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'achievement',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly')], max_length=10)),
                ('points', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'mission',
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image_url', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='plants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'plant',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField()),
                ('plant', models.ForeignKey(db_column='plant_id', on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='plants.plant')),
            ],
            options={
                'db_table': 'entry',
            },
        ),
        migrations.CreateModel(
            name='PlantAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(db_column='achievement_id', on_delete=django.db.models.deletion.CASCADE, related_name='plant_achievements', to='plants.achievement')),
                ('plant', models.ForeignKey(db_column='plant_id', on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='plants.plant')),
            ],
            options={
                'db_table': 'plant_achievement',
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(db_column='achievement_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='plants.achievement')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_achievement',
            },
        ),
        migrations.CreateModel(
            name='UserMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mission', models.ForeignKey(db_column='mission_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_missions', to='plants.mission')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='missions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_mission',
            },
        ),
        migrations.CreateModel(
            name='EntryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.TextField()),
                ('entry', models.ForeignKey(db_column='entry_id', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='plants.entry')),
            ],
            options={
                'db_table': 'entry_image',
                'indexes': [models.Index(fields=['entry'], name='idx_entry_image_entry')],
            },
        ),
        migrations.AddIndex(
            model_name='plant',
            index=models.Index(fields=['user'], name='idx_plant_user'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['plant', 'recorded_at'], name='idx_entry_plant_ts'),
        ),
        migrations.AddIndex(
            model_name='plantachievement',
            index=models.Index(fields=['plant'], name='idx_pla_achv_plant'),
        ),
        migrations.AddIndex(
            model_name='plantachievement',
            index=models.Index(fields=['achievement'], name='idx_pla_achv_achv'),
        ),
        migrations.AddIndex(
            model_name='userachievement',
            index=models.Index(fields=['user'], name='idx_usr_achv_user'),
        ),
        migrations.AddIndex(
            model_name='userachievement',
            index=models.Index(fields=['achievement'], name='idx_usr_achv_achv'),
        ),
        migrations.AddIndex(
            model_name='usermission',
            index=models.Index(fields=['user'], name='idx_user_mission_user'),
        ),
        migrations.AddIndex(
            model_name='usermission',
            index=models.Index(fields=['mission'], name='idx_user_mission_mission'),
        ),
    ]
